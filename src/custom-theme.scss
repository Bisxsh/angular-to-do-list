
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/

$md-primary-accent: (
  50 : #effdfb,
  100 : #d7faf6,
  200 : #bdf6f0,
  300 : #a3f2ea,
  400 : #8ff0e6,
  500 : #7bede1,
  600 : #73ebdd,
  700 : #68e8d9,
  800 : #5ee5d5,
  900 : #4be0cd,
  A100 : #ffffff,
  A200 : #ffffff,
  A400 : #d4fff9,
  A700 : #bafff6,
  contrast: (
    50 : #000000,
    100 : #000000,
    200 : #000000,
    300 : #000000,
    400 : #000000,
    500 : #000000,
    600 : #000000,
    700 : #000000,
    800 : #000000,
    900 : #000000,
    A100 : #000000,
    A200 : #000000,
    A400 : #000000,
    A700 : #000000,
  )
);


$todo-list-primary: mat.define-palette($md-primary-accent, 500);
$todo-list-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$todo-list-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$todo-list-theme: mat.define-light-theme((
  color: (
    primary: $todo-list-primary,
    accent: $todo-list-accent,
    warn: $todo-list-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($todo-list-theme);

